<!-- dashboard.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>NFC ATTENDANCE</title>
  <link rel="stylesheet" href="css/styles.css" />
  <!-- Font Awesome Cdn Link -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"/>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
  <style>
    /* Additional CSS can go here */
   
  </style>
</head>
<body>
  <div class="container">
    <nav>
      <ul>
        <li><a href="#" class="logo">
          <img src="images/nfc-icon-31.png">
          <span class="nav-item">NFCAMS</span>
        </a></li>
        <li><a href="#" id="dashboard-link" class="nav-itemm">
          <i class="fas fa-menorah"></i>
          <span class="nav-item">Dashboard</span>
        </a></li>
        <li><a href="#" id="attendance-link" class="nav-itemm">
          <i class="fas fa-chart-bar"></i>
          <span class="nav-item">View Attendance</span>
        </a></li>
        <li><a href="#" id="attendance-percentage-link" class="nav-itemm">
          <i class="fas fa-percentage"></i>
          <span class="nav-item">Attendance %</span>
        </a></li>
        <li><a href="#" id="message-link" class="nav-itemm">
          <i class="fas fa-envelope"></i>
          <span class="nav-item">Messages</span>
        </a></li>
        <!-- New Announcements tab -->
  <li><a href="#" id="announcements-link" class="nav-itemm">
    <i class="fas fa-bullhorn"></i>
    <span class="nav-item">Announcements</span>
  </a></li>
        <li><a href="#" id="report-link" class="nav-itemm">
          <i class="fas fa-file-alt"></i>
          <span class="nav-item">Report</span>
        </a></li>

        
        
        <li><a href="#" id="students-link" class="nav-itemm">
          <i class="fas fa-users"></i>
          <span class="nav-item">Total Students</span>
        </a></li>
        
        
<li><a href="#" id="profile-link" class="nav-itemm">
  <i class="fas fa-user"></i>
  <span class="nav-item">Profile</span>
</a></li>

        <li><a href="#" class="logout" onclick="logout()" id="logout-link" class="nav-itemm">
          <i onclick="logout()" class="fas fa-sign-out-alt"></i>
          <span onclick="logout()" class="nav-item">Log out</span>
        </a></li>
      </ul>
    </nav>


    <section class="main">
      <div class="main-top">
        <h1>Welcome to Dashboard</h1>
        <i class="fas fa-user-circle" id="profile-icon"></i> <!-- Updated icon -->
      </div>

      <div id="welcome" class="tabcontent">
       
        <!-- Welcome content with button for taking attendance -->
        <div class="welcome-message" style="display: block;">
            <h3 style="color: #55c57a;">Welcome <%= username %>!</h3>
            <p>Welcome to your dashboard! Explore the tabs to manage your tasks, view attendance, and update your profile.</p>
        </div><br>
        
<div class="card-container">
    
 <!-- Card 3 -->
 <div class="card">
  <h2>Take Attendance Using NFC</h2>
  <p>Click Here to Attendance Using NFC</p>
  <button onclick="takeAttendance()" class="secondary-button take-attendance-btn report-link" style="display: block;">Take Attendance Using NFC</button>
</div>

 <!-- Card 4 -->
 <div onclick="showAddAttendanceForm()"  class="card">
  <h2>Manually Add Attendance</h2>
  <p>Click Here to Attendance Manually</p>
  <button onclick="showAddAttendanceForm()" class="secondary-button manually-add report-link">Manually Add Attendance</button>
</div>

</div>
        
        <!-- <button onclick="takeAttendance()" class="secondary-button take-attendance-btn" style="display: block;">Take Attendance Using NFC</button> -->
        <!-- <br> -->
        <!-- Add button for manually adding attendance -->
        <!-- <button onclick="showAddAttendanceForm()" class="secondary-button manually-add">Manually Add Attendance</button> -->

        <!-- Add Attendance Form Container (Hidden by default) -->
        <div class="attendance-form-container" id="addAttendanceFormContainer" style="display: none;">
          <div class="attendance-form-header">
            <h2>Add Attendance</h2>
            <button class="close-btn" onclick="closeAddAttendanceForm()">&times;</button> <!-- Close button -->
          </div>
          <form id="attendanceForm"  onsubmit="submitAttendance(event)">
            <label for="serialNumber">Serial Number:</label>
            <input type="text" id="serialNumber" name="serialNumber" placeholder="Serial No or Roll No" required><br>

            <!-- <label for="logData">Log Data:</label> -->
            <!-- <input type="text" id="logData" name="logData"  value="in"  required><br> -->

            <label for="time">Time:</label>
            <input type="datetime-local" id="time" name="time" required><br>

            <!-- <label for="teacher">Teacher:</label> -->
            <!-- <input type="text" id="teacher" name="teacher"><br> -->

             <!-- Select Period -->
    <label for="period">Period:</label>
    <select id="period" name="period">
      <option value="Period 1">Period 1</option>
      <option value="Period 2">Period 2</option>
      <option value="Period 3">Period 3</option>
      <option value="Period 4">Period 4</option>
      <option value="Period 5">Period 5</option>
      <option value="Period 6">Period 6</option>
    </select><br>

    <label for="subject">Subject:</label>
    <select id="subject" name="subject">
        <!-- Subject options will be dynamically populated here -->
    </select><br>

            <!-- Select collection for adding data -->
            <!-- <label for="collection">Select Teacher</label> -->
            <!-- <select id="collection" name="collection"> -->
              <!-- <option value="jini_records">Jini George</option> -->
              <!-- <option value="anitha_records">Anithia</option> -->
              <!-- <option value="nimitha_records">Nimitha</option> -->
              
            <!-- </select><br> -->
            <!-- Assuming there's a hidden input field in the HTML that stores the username -->
<input type="hidden" id="username" value="<%= username %>">

            <button class="secondary-button-add" type="submit" >Add Attendance</button>
          </form>
        </div>

        
      </div>
   
   <!-- Attendance content -->
   <section class="attendance" style="display:none;">
    <!-- Add the refresh icon -->
    <button onclick="refreshPage()" class="refresh-btn"><i class="fas fa-sync-alt"></i> Refresh</button>

   <div class="attendance-list">
       <h1>Attendance List of Students</h1>
       <br>
       <p>Total Present: <span id="totalPresentCount" class="total-present-count">0</span></p>
       <br>
       <!-- Button to select date -->
       <label for="attendanceDate">Select Date: </label>
       <input type="date" id="attendanceDate">
       <!-- Enhanced select input for subject with modern styling -->
<div class="select-container">
 <label for="attendanceSubject" class="select-label">Select Subject:</label>
 <select id="attendanceSubject" class="select-styled">
     <option value="">All Subjects</option>
     <% subjects.forEach(subject => { %>
         <option value="<%= subject %>"><%= subject %></option>
     <% }); %>
 </select>
</div>

<!-- Enhanced select input for period with modern styling -->
<div class="select-container">
 <label for="attendancePeriod" class="select-label">Select Period:</label>
 <select id="attendancePeriod" class="select-styled">
     <option value="">All Periods</option>
     <option value="Period 1">Period 1</option>
     <option value="Period 2">Period 2</option>
     <option value="Period 3">Period 3</option>
     <option value="Period 4">Period 4</option>
     <option value="Period 5">Period 5</option>
     <option value="Period 6">Period 6</option>
     <!-- Add more options for other periods as needed -->
 </select>
</div>

       <button onclick="displayAttendanceByDateAndSubjectandPeriod()" class="secondary-button">Display Attendance</button>
       <button onclick="exportAttendanceToPDF()" class="secondary-button">Export to PDF</button>

       <table id="attendanceTable" class="table">
         <thead>
           <tr>
             <th  style="position: relative;">Date </th>
             <th  style="position: relative;">Time </th>
             <th  style="position: relative;">Student Name</th>
             <th  style="position: relative;">Subject</th>
             <th  style="position: relative;">Period</th>
             <th  style="position: relative;">Message </th>
             <th  style="position: relative;">Delete </th>
           </tr>
         </thead>
         <tbody>
           <% attendanceData.forEach(data => { %>
               <tr>
                   <!-- Displaying date -->
                   <td><%= data.time.toDateString() %></td>
                   <!-- Displaying time -->
                   <td><%= data.time.toLocaleTimeString() %></td>
                   <td><%= data.studentName %></td>
                   <td><%= data.subject %></td>
                   <td><%= data.period %></td>
                  
                   <td>
                     <!-- Message icon for each student -->
                     <button onclick="sendMessage('<%= data.studentName %>')" class="message-btn"><i class="fas fa-envelope"></i></button>
                   </td>
                   <td>
                    <!-- Ensure the button in your HTML correctly passes the ID -->
<button onclick="deleteAttendance('<%= data._id %>', '<%= username %>')">Delete</button>
                 </td>
                  
               </tr>
           <% }); %>
         </tbody>
       </table>
       <!-- Button to Export Attendance to PDF -->
       
     </div>
   </section>

    <section class="report" style="display:none;">
      <!-- Report content -->
      <button onclick="refreshPage()" class="refresh-btn"><i class="fas fa-sync-alt"></i> Refresh</button>
      <div class="report-list">
        <h1 >Monthly Attendance Report Generation</h1>
        <!-- Add your report content here -->
        <p>This report provides an overview of the monthly attendance records for all students. Here, you can generate reports in Excel and PDF formats according to your needs..</p>

      <!-- Card 5 -->
 <div   class="card">
  <h2>Generate Execl Report</h2>
  <p>Click Here to Download Execl Report in csv Format </p>
  <a href="/generate-excel-report?username=<%= username %>" target="_blank" class="report-link report-excel">Download Excel Report <i class="fas fa-file-excel"></i></a>
</div>

  <!-- Card 5 -->
  <div   class="card">
    <h2>Generate PDF Report</h2>
    <p>Click Here to Download PDF Attendance Report </p>
    <a href="/generate-pdf-report?username=<%= username %>" class="report-link report-pdf" target="_blank">Download PDF Report <i class="fas fa-file-pdf"></i></a>
  </div>

        <!-- <div class="report-actions"> -->
          <!-- <a href="/generate-excel-report?username=<%= username %>" target="_blank" class="report-link report-excel">Download Excel Report <i class="fas fa-file-excel"></i></a> -->
          <!-- <a href="/generate-pdf-report?username=<%= username %>" class="report-link report-pdf" target="_blank">Download PDF Report <i class="fas fa-file-pdf"></i></a> -->
          
        <!-- </div> -->
      
    </section>

    <section class="students" style="display:none;">
      <!-- Students content -->
      <button onclick="refreshPage()" class="refresh-btn"><i class="fas fa-sync-alt"></i> Refresh</button>
      <div class="students-content">
          <h1>Total Students</h1>
          <!-- Add select input for class -->
          <label for="attendanceClass">Select Class: </label>
          <select id="attendanceClass">
            <option value="">All Classes</option>
            <% classes.forEach(function(classItem) { %>
                <option value="<%= classItem %>"><%= classItem %></option>
            <% }); %>
          </select>
          <button onclick="displayStudentsByClass()" class="secondary-button">Display Students</button>
          <table id="attendanceTablee" class="table">
            <thead>
              <tr>
                <th>Serial Number</th>
                <th>Student Name</th>
                <th>Class</th>
                <th>Phone Number</th>
              </tr>
            </thead>
            <tbody>
              <% students.forEach(student => { %>
                  <tr>
                      <td><%= student.serialNumber %></td>
                      <td><%= student.student_name %></td>
                      <td><%= student.class %></td>
                      <td><%= student.ph %></td>
                  </tr>
              <% }); %>
            </tbody>
          </table>
        </div>
    </section>

    <section class="messages" style="display:none;">
      <button onclick="refreshPage()" class="refresh-btn"><i class="fas fa-sync-alt"></i> Refresh</button>
      <H1>You can send bulk SMS to parents informing them about their child’s performance, attendance, important dates, etc</H1>
      <div class="messages-content">
        <h2>Send a Message</h2>
        <form id="messageForm" action="/send-message" method="post" class="message-form" enctype="multipart/form-data">
          <div class="form-group">
            <label for="recipientType">Recipient Type:</label>
            <select name="recipientType" id="recipientType" class="form-control">
              <option value="individual">Individual</option>
              <option value="parents">Parents (Group MSG)</option>
              <option value="students">Students (Group MSG)</option>
            </select>
          </div>
          <div class="form-group">
            <label for="email">Email (for individual only not used for group msgs) :</label>
            <input type="email" id="email" name="email" class="form-control">
          </div>
          <div class="form-group">
            <label for="subject">Subject For Email:</label>
            <input type="text" id="subject" name="subject" class="form-control">
          </div>
          <div class="form-group">
            <label for="message">Message Content For Email:</label>
            <textarea id="message" name="message" class="form-control"></textarea>
          </div>

          <div class="form-group">
            <label for="pdfFile">PDF File:</label>
            <input type="file" id="pdfFile" name="pdfFile" accept="application/pdf" class="form-control">
          </div>


          <button type="submit" class="btn-send">Send <i class="fas fa-paper-plane"></i></button>
        </form>
        <div id="messageStatus"></div> <!-- Placeholder for the status message -->
      </div>
    </section>

    <section class="attendance-percentage" style="display:none;">
      <button onclick="refreshPage()" class="refresh-btn"><i class="fas fa-sync-alt"></i> Refresh</button>
      <div class="attendance-percentage-content">
        <h1>Calculate Attendance Percentage Based on Subject</h1><br>
        
        <!-- <label for="">Subject: (Format for entering below input : <b> <span class="sub"> SUBJECT</span></span><span class="hai">CLASS</span> Example:CDS6)</b></label> -->
        <!-- <input  type="text" id="subjectInput" name="subject" placeholder="FORMAT:CDS6/AADS6/CGIPS6/PYTHONS6"  required><br> -->
        
        <label for="subjectInput" class="sub">Select Subject:</label>
      <select id="subjectInput" class="select-styled">
        <option value="">All Subjects</option>
        <% subjects.forEach(subject => { %>
            <option value="<%= subject %>"><%= subject %></option>
        <% }); %>
      </select><BR></BR>



        
        <label for="totalClassesInput">Total Classes Conducted:</label>
        <input type="number" id="totalClassesInput" name="totalClasses" placeholder="Enter Total Classes Conducted for Above Subject (Total Hours Taken)" required readonly>
        <button onclick="calculateAttendancePercentage()" class="secondary-button">Calculate</button>
        
        <!-- Predefined table structure -->
        <div id="attendancePercentageResults" style="display: none;">
          <table class="table" id="attendancePercentageTable">
            <button onclick="generateAttendancePercentagePDF()" class="secondary-button">Generate PDF Report</button>
            <thead>
              <tr>
                <th>Student Name</th>
                <th>Attendance Percentage</th>
              </tr>
            </thead>
            <tbody>
              
              <!-- Data will be inserted here dynamically -->
            </tbody>
          </table>
        </div>
      </div>
    </section>

    <section class="announcements" style="display:none;">
      <h1>Here you can view the latest announcements.</h1><br>
      <!-- <p>Here you can view the latest announcements.</p><br> -->
      <!-- Add more content as needed -->
      <div class="announcements-container">
        <div id="lowAttendanceSection" class="low-attendance-container">
          <h1 class="section-title"><U>Students with Low Attendance</U></h1>
          <div id="lowAttendanceList" class="low-attendance-list">
              <!-- Subjects and students will be dynamically inserted here -->
          </div>
        </div>
       
      </div>
    </section>

    <section class="profile" style="display:none;">
      <button onclick="refreshPage()" class="refresh-btn"><i class="fas fa-sync-alt"></i> Refresh</button>
      <div class="profile-content">
        <h1>Profile Information</h1>
        <div class="profile-card">
          <i class="fas fa-user"></i>
          <p>Username: <%= username %></p>
        </div>
        <div class="profile-card">
          <i class="fas fa-envelope"></i>
          <p>Email: mathewsgeorge202@gmail.com</p>
        </div>
        <!-- Add more profile details here -->
      </div>
    </section>
  </section>

</div>

<!-- Overlay -->
<div class="overlay"></div>

<!-- The Modal -->
<div id="myModal" class="modal">
  <!-- Modal content -->
  <div class="modal-content">
    <span class="close">&times;</span>
    <p id="modalMessage">Message sent successfully</p>
  </div>
</div>
 

  <script>

document.addEventListener('DOMContentLoaded', function() {
    var modal = document.getElementById("myModal");
    var span = document.getElementsByClassName("close")[0];

    document.getElementById('messageForm').addEventListener('submit', function(event) {
        event.preventDefault(); // Prevent the default form submission

        const formData = new FormData(this);
        fetch('/send-message', {
            method: 'POST',
            body: formData,
        })
        .then(response => response.text())
        .then(data => {
            document.getElementById("modalMessage").innerText = data; // Set the message
            modal.style.display = "block"; // Show the modal
        })
        .catch(error => {
            console.error('Error:', error);
            document.getElementById("modalMessage").innerText = 'Error sending message';
            modal.style.display = "block"; // Show the modal
        });
    });

    // When the user clicks on <span> (x), close the modal
    span.onclick = function() {
        modal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
});

     // Add this inside the <script> tag
document.getElementById('profile-icon').addEventListener('click', function(event) {
    event.preventDefault();
    // Update heading
    document.querySelector('.main-top h1').innerText = 'Profile';
    // Hide all sections
    hideAllSections();
    // Show profile section
    document.querySelector('.profile').style.display = 'block';
});

    
   // JavaScript code to handle navigation link clicks
  document.getElementById('dashboard-link').addEventListener('click', function(event) {
    event.preventDefault();
    // Update heading
    document.querySelector('.main-top h1').innerText = 'Welcome to Dashboard';
    // Hide all sections
    hideAllSections();
    // Show welcome section
    document.getElementById('welcome').style.display = 'block';
    document.querySelector('.welcome-message').style.display = 'block';
    document.querySelector('.take-attendance-btn').style.display = 'block';
  });

  document.getElementById('report-link').addEventListener('click', function(event) {
    event.preventDefault();
    // Update heading
    document.querySelector('.main-top h1').innerText = 'Report';
    // Hide all sections
    hideAllSections();
    // Show report section
    document.querySelector('.report').style.display = 'block';
  });

  document.getElementById('attendance-link').addEventListener('click', function(event) {
    event.preventDefault();
    // Update heading
    document.querySelector('.main-top h1').innerText = 'Attendance';
    // Hide all sections
    hideAllSections();
    // Show attendance section
    document.querySelector('.attendance').style.display = 'block';
  });

  document.getElementById('students-link').addEventListener('click', function(event) {
    event.preventDefault();
    // Update heading
    document.querySelector('.main-top h1').innerText = 'List of All Students';
    // Hide all sections
    hideAllSections();
    // Show students section
    document.querySelector('.students').style.display = 'block';
  });


// Update the event listener for the profile-link
document.getElementById('profile-link').addEventListener('click', function(event) {
  event.preventDefault();
  document.querySelector('.main-top h1').innerText = 'Profile';
  hideAllSections();
  document.querySelector('.profile').style.display = 'block'; // Updated class reference
});

document.getElementById('attendance-percentage-link').addEventListener('click', function(event) {
  event.preventDefault();
  document.querySelector('.main-top h1').innerText = 'Attendance Percentage';
  hideAllSections();
  document.querySelector('.attendance-percentage').style.display = 'block';
});

document.getElementById('message-link').addEventListener('click', function(event) {
  event.preventDefault();
  document.querySelector('.main-top h1').innerText = 'Messages';
  hideAllSections();
  document.querySelector('.messages').style.display = 'block';
});

document.getElementById('announcements-link').addEventListener('click', function(event) {
  event.preventDefault();
  document.querySelector('.main-top h1').innerText = 'Announcements';
  hideAllSections();
  document.querySelector('.announcements').style.display = 'block';
});


 // Update the hideAllSections function
function hideAllSections() {
  document.getElementById('welcome').style.display = 'none';
  document.querySelector('.welcome-message').style.display = 'none';
  document.querySelector('.take-attendance-btn').style.display = 'none';
  document.querySelector('.report').style.display = 'none';
  document.querySelector('.attendance').style.display = 'none';
  document.querySelector('.students').style.display = 'none';
  document.querySelector('.profile').style.display = 'none'; // Updated class reference
  document.querySelector('.attendance-percentage').style.display = 'none';
  document.querySelector('.messages').style.display = 'none';
  document.querySelector('.announcements').style.display = 'none';
}


document.addEventListener('DOMContentLoaded', function() {
    const subjectInput = document.getElementById('subjectInput');
    const totalClassesInput = document.getElementById('totalClassesInput');

    // Event listener for subject input changes
    subjectInput.addEventListener('change', function() {
        const subject = subjectInput.value.toUpperCase(); // Convert to uppercase

        // Fetch total classes for the entered subject
        fetch(`/get-total-classes?subject=${subject}`)
        .then(response => response.json())
        .then(data => {
            if (data.totalClasses) {
                totalClassesInput.value = data.totalClasses; // Set the total classes input field
            } else {
                alert('Total classes data not found for the entered subject.');
                totalClassesInput.value = ''; // Clear the field if no data found
            }
        })
        .catch(error => {
            console.error('Error fetching total classes:', error);
            alert('Failed to fetch total classes.');
        });
    });
});


function calculateAttendancePercentage() {
    const subjectInput = document.getElementById('subjectInput');
    let subject = subjectInput.value.toUpperCase(); // Convert to uppercase
    const username = '<%= username %>';

    // Fetch total classes first
    fetch(`/get-total-classes?subject=${subject}&username=${username}`)
    .then(response => response.json())
    .then(data => {
        if (data.totalClasses) {
            const totalClasses = data.totalClasses;

            // Now fetch attendance percentage
            fetch('/calculate-attendance-percentage', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ subject, totalClasses, username })
            })
            .then(response => response.json())
            .then(data => {
                const tbody = document.querySelector('#attendancePercentageTable tbody');
                tbody.innerHTML = ''; // Clear existing rows
                data.forEach(item => {
                    const row = `<tr><td>${item.studentName}</td><td>${item.percentage}%</td></tr>`;
                    tbody.innerHTML += row;
                });
                document.getElementById('attendancePercentageResults').style.display = 'block';
            })
            .catch(error => {
                console.error('Error:', error);
            });
        } else {
            console.error('Total classes data not found');
        }
    })
    .catch(error => {
        console.error('Error fetching total classes:', error);
    });
}

function generateAttendancePercentagePDF() {
    const subject = document.getElementById('subjectInput').value;
    const totalClasses = document.getElementById('totalClassesInput').value;
    const username = '<%= username %>'; // Assuming username is available in your EJS template

    // Redirect to the server route that generates the PDF
    window.location.href = `/generate-attendance-percentage-pdf?subject=${subject}&totalClasses=${totalClasses}&username=${username}`;
}


  function displayStudentsByClass() {
    var selectedClass = document.getElementById("attendanceClass").value;
    var rows = document.getElementById("attendanceTablee").rows;

    for (var i = 1; i < rows.length; i++) {
        var classCell = rows[i].getElementsByTagName("td")[2].innerText;

        if (selectedClass === "" || classCell === selectedClass) {
            rows[i].style.display = "";
        } else {
            rows[i].style.display = "none";
        }
    }
}


  function takeAttendance() {
    // Open the specified URL in a new tab
    window.open("https://nfc-final-test.vercel.app/", "_blank");
}


function displayAttendanceByDateAndSubjectandPeriod() {
    var selectedDate = new Date(document.getElementById("attendanceDate").value);
    var selectedSubject = document.getElementById("attendanceSubject").value;
    var selectedPeriod = document.getElementById("attendancePeriod").value; // Get the selected period
    var totalPresent = 0;

    var rows = document.getElementById("attendanceTable").rows;

    for (var i = 1; i < rows.length; i++) {
        var dateCell = new Date(rows[i].getElementsByTagName("td")[0].innerText);
        var subjectCell = rows[i].getElementsByTagName("td")[3].innerText;
        var periodCell = rows[i].getElementsByTagName("td")[4].innerText; // Get the period cell value

        var dateMatches = dateCell.toDateString() === selectedDate.toDateString();
        var subjectMatches = selectedSubject === "" || subjectCell === selectedSubject;
        var periodMatches = selectedPeriod === "" || periodCell === selectedPeriod; // Check if the period matches

        if (dateMatches && subjectMatches && periodMatches) {
            rows[i].style.display = "";
            totalPresent++;
        } else {
            rows[i].style.display = "none";
        }
    }

    // Display total count
    document.getElementById("totalPresentCount").innerText = totalPresent;
}



function logout() {
      // Redirect to the login page or any other action you want to perform on logout
      window.location.href = "/"; // Assuming your login page is served at the root URL
    }


function sendMessage(studentName) {
    // Make an AJAX request to your server to send an SMS using Twilio
    // You need to have an endpoint on your server to handle this request
    
    // Assuming you're using Fetch API for AJAX requests
    fetch('/send-sms', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ studentName: studentName })
    })
    .then(response => {
        if (response.ok) {
            alert('SMS sent successfully');
        } else {
            alert('Failed to send SMS');
        }
    })
    .catch(error => {
        console.error('Error sending SMS:', error);
        alert('Failed to send SMS');
    });
}


 // Function to show the add attendance form
 function showAddAttendanceForm() {
        // Show overlay
        document.querySelector('.overlay').style.display = 'block';
        // Show the form container
        document.querySelector('.attendance-form-container').style.display = 'block';
    }

    // Function to close the add attendance form
    function closeAddAttendanceForm() {
        // Hide overlay
        document.querySelector('.overlay').style.display = 'none';
        // Hide the form container
        document.querySelector('.attendance-form-container').style.display = 'none';
    }

// Mapping of serial numbers to specific values
const serialNumberMap = {
    '1': '05:39:ea:cc:f7:b0:c1',
    '2': '05:33:96:60:06:b0:c1',
    '3': '05:36:41:dc:f7:b0:c1'
    // Add more mappings as needed
};

function submitAttendance(event) {
    event.preventDefault();

    // Get form data
    const formData = new FormData(document.getElementById('attendanceForm'));

    // Convert form data to JSON object
    const jsonData = {};
    formData.forEach((value, key) => {
        // Map serial numbers to specific values before adding to jsonData
        if (key === 'serialNumber' && serialNumberMap[value]) {
            jsonData[key] = serialNumberMap[value];
        } else {
            jsonData[key] = value;
        }
    });

    // Include the username in jsonData
    jsonData['username'] = document.getElementById('username').value; // Assuming the username is stored in an input or a variable

    // Send form data to server
    fetch('/add-attendance', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(jsonData)
    })
    .then(response => {
        if (response.ok) {
            alert('Attendance added successfully');
            // Reset the form after successful submission
            document.getElementById('attendanceForm').reset();
            // Hide the form
            closeAddAttendanceForm();
            refreshPage();
        } else {
            throw new Error('Failed to add attendance');
        }
    })
    .catch(error => {
        console.error('Error adding attendance:', error);
        alert('Failed to add attendance');
    });
}

    // Function to set the active tab in local storage
function setActiveTab(tabId) {
    localStorage.setItem('activeTab', tabId);
}

// Function to get the active tab from local storage
function getActiveTab() {
    return localStorage.getItem('activeTab');
}

// Function to switch to the active tab
function switchToActiveTab() {
    const activeTabId = getActiveTab();
    if (activeTabId) {
        const activeTab = document.getElementById(activeTabId);
        if (activeTab) {
            activeTab.click(); // Trigger click event to switch to the active tab
        }
    }
}

// Add event listeners to set the active tab when a navigation link is clicked
document.querySelectorAll('.nav-itemm').forEach(item => {
    item.addEventListener('click', function() {
        setActiveTab(this.id); // Set the active tab to the clicked link's id
    });
});

// Call switchToActiveTab when the DOM content is loaded
document.addEventListener('DOMContentLoaded', switchToActiveTab);

function refreshPage() {
    location.reload();
}

function deleteAttendance(id, username) {
    // Confirmation dialog
    const isConfirmed = confirm('Are you sure you want to delete this data?');
    
    // Check if the user confirmed the deletion
    if (isConfirmed) {
        // Proceed with the deletion
        fetch('/delete-attendance', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ id: id, username: username }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Record deleted successfully');
                // Optionally, refresh the page or remove the row from the table
                refreshPage(); // Refresh the page to reflect the changes
            } else {
                alert('Failed to delete record');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Failed to delete record');
        });
    } else {
        // If the user clicked Cancel, do nothing
        console.log('Deletion cancelled by user.');
    }
}

document.addEventListener('DOMContentLoaded', function() {
    var recipientTypeDropdown = document.getElementById('recipientType');
    var emailLabel = document.querySelector('label[for="email"]');
    var emailInput = document.getElementById('email');

    recipientTypeDropdown.addEventListener('change', function() {
        if (recipientTypeDropdown.value === 'parents' || recipientTypeDropdown.value === 'students') {
            emailLabel.style.display = 'none'; // Hide the Email label
            emailInput.style.display = 'none'; // Hide the Email input
        } else {
            emailLabel.style.display = 'block'; // Show the Email label for individual recipients
            emailInput.style.display = 'block'; // Show the Email input for individual recipients
        }
    });
});



function collectTableData() {
    const rows = document.querySelectorAll("#attendanceTable tbody tr");
    const visibleData = Array.from(rows).filter(row => row.style.display !== "none").map(row => {
        const columns = row.querySelectorAll("td");
        return {
            date: columns[0].innerText,
            time: columns[1].innerText,
            studentName: columns[2].innerText,
            subject: columns[3].innerText,
            period: columns[4].innerText
        };
    });
    return visibleData;
}

function exportAttendanceToPDF() {
    const attendanceData = collectTableData();
    if (attendanceData.length === 0) {
        alert("No data available to export.");
        return;
    }

    fetch('/export-attendance-to-pdf', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ attendanceData })
    })
    .then(response => response.blob())
    .then(blob => {
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = "attendance_report.pdf";
        document.body.appendChild(a);
        a.click();
        a.remove();
    })
    .catch(error => console.error('Error exporting PDF:', error));
}

document.addEventListener('DOMContentLoaded', function() {
    fetchLowAttendanceStudents();
});

function fetchLowAttendanceStudents() {
    const username = '<%= username %>';
    fetch(`/students-low-attendance?username=${username}`)
    .then(response => response.json())
    .then(data => {
        const lowAttendanceList = document.getElementById('lowAttendanceList');
        lowAttendanceList.innerHTML = ''; // Clear existing entries

        let subjects = {};
        // Group students by subject
        data.forEach(item => {
            if (!subjects[item.subject]) {
                subjects[item.subject] = [];
            }
            subjects[item.subject].push(item);
        });

        // Create entries for each subject
        for (let subject in subjects) {
            let subjectContainer = document.createElement('div');
            subjectContainer.className = 'subject-container';
            let subjectTitle = document.createElement('h4');
            subjectTitle.className = 'subject-title';
            subjectTitle.textContent = subject;
            subjectContainer.appendChild(subjectTitle);

            subjects[subject].forEach(student => {
                let studentEntry = document.createElement('div');
                studentEntry.className = 'student-entry';
                studentEntry.innerHTML = `<strong>${student.studentName}</strong> - ${student.percentage}%`;
                subjectContainer.appendChild(studentEntry);
            });

            lowAttendanceList.appendChild(subjectContainer);
        }
    })
    .catch(error => {
        console.error('Error fetching low attendance students:', error);
    });
}




<!-- Add this script section at the end of your dashboard.ejs file -->

// Define the subjects for each teacher
const teacherSubjects = {
    'Jini_George': ['JAVAS3', 'CGIPS6'],
    'Anitha': ['AADS6', 'FLATS5'],
    'Nimitha': ['IEFTS6','PYTHONS6']
};

// Function to populate the subject dropdown based on the logged-in teacher's username
function populateSubjectsForTeacher(username) {
    const subjectDropdown = document.getElementById('subject');
    subjectDropdown.innerHTML = ''; // Clear existing options

    const subjects = teacherSubjects[username] || []; // Get subjects based on username

    subjects.forEach(subject => {
        const option = document.createElement('option');
        option.value = subject;
        option.textContent = subject;
        subjectDropdown.appendChild(option);
    });
}

// Call populateSubjectsForTeacher with the logged-in teacher's username
const loggedInUsername = '<%= username %>'; // Assuming the username is available in your EJS template
populateSubjectsForTeacher(loggedInUsername);


  </script>
</body>
</html>